version: 2

# Base python 3 setup
python3: &python3
  working_directory: ~/repo
  docker:
    # the Docker image with Cypress dependencies
    - image: python:3.7
      auth:
        username: $DOCKERHUB_USER
        password: $DOCKERHUB_PASSWORD
      environment:
        ## this enables colors in the output
        TERM: xterm

jobs:
  build:
    # Main build process
    <<: *python3
    steps:
      - checkout
      - run:
          name: Pip Install
          command: |
            pip install pipenv
      - run:
          command: |
            pipenv install --system --deploy
      - run:
          name: Build dist
          command: python setup.py sdist bdist_wheel
      - run:
          name: Check dist
          command: python -m twine check dist/*
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist

  test_python3:
    # Main build process
    <<: *python3
    steps:
      - checkout
      - run:
          name: Pip Install
          command: |
            pip install pipenv
      - run:
          command: |
            pipenv install --system --deploy
      - run:
          name: Run Tests
          command: python test.py
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1

  deploy_test:
    # Main build process
    <<: *python3
    steps:
      # Checkout git repo
      - checkout
      - run:
          name: Pip Install
          command: |
            pip install pipenv
      - run:
          command: |
            pipenv install --system --deploy
      # Attach the public repo created in the build task
      - attach_workspace:
          at: ~/repo
      - run:
          name: Upload to PYPI test
          command: python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

  deploy:
    # Main build process
    <<: *python3
    steps:
      # Checkout git repo
      - checkout
      - run:
          name: Pip Install
          command: |
            pip install pipenv
      - run:
          command: |
            pipenv install --system --deploy
      # Attach the public repo created in the build task
      - attach_workspace:
          at: ~/repo
      - run:
          name: Upload to PYPI
          command: python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          context:
            - hubblehq-docker
      - test_python3:
          context:
            - hubblehq-docker
      - deploy_test:
          context:
            - hubblehq-docker
          requires:
            - build
            - test_python3
          filters:
            branches:
              only: main
      - deploy:
          context:
            - hubblehq-docker
          requires:
            - deploy_test
          filters:
            branches:
              only: main
